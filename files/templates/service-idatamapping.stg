/* Example comment -- just for making the tmLanguage file. */
serviceClasses(service) ::= <<

// Version: <service.version>
// Service: <service.name>

namespace LucidEdge.SqlRequests
{
	<inputs(service.name, service.inputs)>

	<outputs(service.name, service.outputs)>
}
>>

inputs(name, ins) ::= <<
public class <name>Inputs : IParameters
{
	<ins.properties:props(); separator="\n">

	public IDictionary\<string,object> ToParameters()
	{
		return
		new Dictionary\<string,object>
		{
			<ins.properties:mapped(); separator="\n">
		};
	}
}
>>

mapped(p) ::= <<
{"<p.name>", <p.name>}
>>

outputs(name, outs) ::= <<
public class <name>Outputs : IDataMapping
{
	public IDictionary\<string,Datapoint>Map { get; set; }

	<outs.properties:props(); separator=",\n">
}
>>

props(p) ::= <<
<if(p.attributes)>// [<p.attributes:atts(); separator=", ">]
<endif>public <p.type> <p.name> { get { return Map["<p.name>"].ToValue\<<p.type>\>(); } }
>>

atts(a) ::= "<a>"